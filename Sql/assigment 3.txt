1. Write a SQL statement to insert a record as follows:
Employees :


mysql> use assignment_3;
Database changed
mysql> CREATE TABLE employees (
    ->     employee_id     INT PRIMARY KEY,
    ->     first_name      VARCHAR(50),
    ->     last_name       VARCHAR(50),
    ->     email           VARCHAR(50) UNIQUE,
    ->     phone_number    VARCHAR(20),
    ->     hire_date       DATE NOT NULL,
    ->     job_id          VARCHAR(20) NOT NULL,
    ->     salary          DECIMAL(10,2),
    ->     commission_pct  DECIMAL(5,2),
    ->     manager_id      INT,
    ->     department_id   INT
    -> );
Query OK, 0 rows affected (0.06 sec)
sql> -- Step 2: Insert the given records
mysql> INSERT INTO employees (employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id)
    -> VALUES
    -> (100, 'Steven',   'King',      'SKING',    '515.123.4567', '1987-06-17', 'AD_PRES', 24000.00, 0.00, 200, 10),
    -> (101, 'Neena',    'Kochhar',   'NKOCHHAR', '515.123.4568', '1987-06-18', 'AD_VP',   17000.00, 0.00, 200, 10),
    -> (102, 'Lex',      'De Haan',   'LDEHAAN',  '515.123.4569', '1987-06-19', 'AD_VP',   17000.00, 0.00, 200, 10),
    -> (103, 'Alexander','Hunold',    'AHUNOLD',  '590.423.4567', '1987-06-20', 'IT_PROG', 9000.00,  0.00, 103, 60),
    -> (104, 'Bruce',    'Ernst',     'BERNST',   '590.423.4568', '1987-06-21', 'IT_PROG', 6000.00,  0.00, 103, 60),
    -> (105, 'David',    'Austin',    'DAUSTIN',  '590.423.4569', '1987-06-22', 'IT_PROG', 4800.00,  0.00, 103, 60),
    -> (106, 'Valli',    'Pataballa', 'VPATABAL', '590.423.4560', '1987-06-23', 'IT_PROG', 4800.00,  0.00, 103, 60),
    -> (107, 'Diana',    'Lorentz',   'DLORENTZ', '590.423.5567', '1987-06-24', 'IT_PROG', 4200.00,  0.00, 114, 30),
    -> (108, 'Nancy',    'Greenberg', 'NGREENBE', '515.124.4569', '1987-06-25', 'SA_MAN',  12000.00, 0.00, 145, 80),
    -> (109, 'Daniel',   'Faviet',    'DFAVIET',  '515.124.4169', '1987-06-26', 'SA_MAN',  9000.00,  0.00, 145, 80);
Query OK, 10 rows affected (0.01 sec)
Records: 10  Duplicates: 0  Warnings: 0

2. Write a SQL statement to insert 3 rows by a single insert statement.
ql> insert into department
    -> values(100,'it_sell',201,2600),
    -> (101,'quality',202,2700),
    -> (102,'store',203, 2800);
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

3. Write a SQL statement to insert one row in jobs table to ensure that no duplicate
value will be entered in the job_id column.

sql>  create table jobs
    ->  (job_id varchar(15),job_title varchar(30), min_sal int, max_sal int);
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO jobs (job_id, job_title, min_sal, max_sal) VALUES
    -> ('ad_pres', 'president', 20000, 40000),
    -> ('ad_vp', 'administration_vice_pres', 15000, 30000),
    -> ('ad_assist', 'administration_assist', 3000, 6000),
    -> ('fi_mgr', 'finance_mgr', 8200, 16000),
    -> ('fi_account', 'accountant', 4200, 9000),
    -> ('ac_mgr', 'accounting_manager', 8200, 16000),
    -> ('ac_account', 'public_account', 4200, 9000),
    -> ('sa_man', 'sales_manager', 10000, 20000);
Query OK, 8 rows affected (0.01 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql>


4. Write SQL statement to increment salary of each emp by 10%.

mysql> update employees
    -> set salary = salary*1.10;
Query OK, 10 rows affected (0.01 sec)
Rows matched: 10  Changed: 10  Warnings: 0


5. Write a SQL statement to change the email column of employees table with 'not
available' for those employees whose department_id is 80 and gets a
commission is less than .20%

email id is uniqe duplicate entry is not applecable


mysql> update employees
    -> SET email = CONCAT('not_awailable_', employee_id)
    -> WHERE department_id = 80;
Query OK, 2 rows affected (0.01 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from employees;
+-------------+------------+-----------+-------------------+--------------+------------+---------+----------+----------------+------------+---------------+
| employee_id | first_name | last_name | email             | phone_number | hire_date  | job_id  | salary   | commission_pct | manager_id | department_id |
+-------------+------------+-----------+-------------------+--------------+------------+---------+----------+----------------+------------+---------------+
|         100 | Steven     | King      | SKING             | 515.123.4567 | 1987-06-17 | AD_PRES | 26400.00 |           0.00 |        200 |            10 |
|         101 | Neena      | Kochhar   | NKOCHHAR          | 515.123.4568 | 1987-06-18 | AD_VP   | 18700.00 |           0.00 |        200 |            10 |
|         102 | Lex        | De Haan   | LDEHAAN           | 515.123.4569 | 1987-06-19 | AD_VP   | 18700.00 |           0.00 |        200 |            10 |
|         103 | Alexander  | Hunold    | AHUNOLD           | 590.423.4567 | 1987-06-20 | IT_PROG |  9900.00 |           0.00 |        103 |            60 |
|         104 | Bruce      | Ernst     | BERNST            | 590.423.4568 | 1987-06-21 | IT_PROG |  6600.00 |           0.00 |        103 |            60 |
|         105 | David      | Austin    | DAUSTIN           | 590.423.4569 | 1987-06-22 | IT_PROG |  5280.00 |           0.00 |        103 |            60 |
|         106 | Valli      | Pataballa | VPATABAL          | 590.423.4560 | 1987-06-23 | IT_PROG |  5280.00 |           0.00 |        103 |            60 |
|         107 | Diana      | Lorentz   | DLORENTZ          | 590.423.5567 | 1987-06-24 | IT_PROG |  4620.00 |           0.00 |        114 |            30 |
|         108 | Nancy      | Greenberg | not_awailable_108 | 515.124.4569 | 1987-06-25 | SA_MAN  | 13200.00 |           0.00 |        145 |            80 |
|         109 | Daniel     | Faviet    | not_awailable_109 | 515.124.4169 | 1987-06-26 | SA_MAN  |  9900.00 |           0.00 |        145 |            80 |
+-------------+------------+-----------+-------------------+--------------+------------+---------+----------+----------------+------------+---------------+
10 rows in set (0.00 sec)


6. Write a SQL statement to change the email column of employees table with 'not
available' for those employees who belongs to the 'Purchasing' department.

> update employees
    -> SET  commission_pct =  commission_pct*(-0.20) where department_id =80;
Query OK, 0 rows affected (0.00 sec)
Rows matched: 2  Changed: 0  Warnings: 0













